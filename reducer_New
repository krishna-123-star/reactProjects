import { useReducer } from "react";

type CartItem = {
  id: number;
  name: string;
  quantity: number;
};

type State = {
  cart: CartItem[];
  form: { name: string; quantity: number };
};

type Action =
  | { type: "SET_FORM"; payload: { name: string; value: string | number } }
  | { type: "ADD_ITEM" }
  | { type: "UPDATE_ITEM"; payload: { id: number; quantity: number } }
  | { type: "REMOVE_ITEM"; payload: number };

function cartReducer(state: State, action: Action): State {
  switch (action.type) {
    case "SET_FORM":
      return {
        ...state,
        form: { ...state.form, [action.payload.name]: action.payload.value },
      };

    case "ADD_ITEM":
      if (!state.form.name.trim()) return state;
      const newItem: CartItem = {
        id: Date.now(),
        name: state.form.name,
        quantity: state.form.quantity,
      };
      return {
        ...state,
        cart: [...state.cart, newItem],
        form: { name: "", quantity: 1 },
      };

    case "UPDATE_ITEM":
      return {
        ...state,
        cart: state.cart.map((item) =>
          item.id === action.payload.id
            ? { ...item, quantity: action.payload.quantity }
            : item
        ),
      };

    case "REMOVE_ITEM":
      return {
        ...state,
        cart: state.cart.filter((item) => item.id !== action.payload),
      };

    default:
      return state;
  }
}

const initialState: State = {
  cart: [
    { id: 1, name: "Laptop", quantity: 1 },
    { id: 2, name: "Headphones", quantity: 2 },
  ],
  form: { name: "", quantity: 1 },
};

export default function CartApp() {
  const [state, dispatch] = useReducer(cartReducer, initialState);

  return (
    <div style={{ padding: "20px" }}>
      <h2>ðŸ›’ Shopping Cart</h2>

      {/* Form */}
      <input
        type="text"
        name="name"
        placeholder="Item name"
        value={state.form.name}
        onChange={(e) =>
          dispatch({
            type: "SET_FORM",
            payload: { name: e.target.name, value: e.target.value },
          })
        }
      />
      <input
        type="number"
        name="quantity"
        min="1"
        value={state.form.quantity}
        onChange={(e) =>
          dispatch({
            type: "SET_FORM",
            payload: { name: e.target.name, value: Number(e.target.value) },
          })
        }
      />
      <button onClick={() => dispatch({ type: "ADD_ITEM" })}>Add Item</button>

      {/* Cart List */}
        {state.cart.map((item) => (
          <li key={item.id}>
            {item.name} â€” Qty: {item.quantity}
            <input
              type="number"
              min="1"
              value={item.quantity}
              onChange={(e) =>
                dispatch({
                  type: "UPDATE_ITEM",
                  payload: { id: item.id, quantity: Number(e.target.value) },
                })
              }
            />
            <button
              onClick={() =>
                dispatch({ type: "REMOVE_ITEM", payload: item.id })
              }
            >
              Remove
            </button>
          </li>
        ))}
    </div>
  );
}
