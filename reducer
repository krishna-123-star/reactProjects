import { useReducer, useState } from "react";

type CartItem = {
  id: number;
  name: string;
  quantity: number;
};

type Action =
  | { type: "ADD_ITEM"; payload: CartItem }
  | { type: "UPDATE_ITEM"; payload: { id: number; quantity: number } }
  | { type: "REMOVE_ITEM"; payload: number };

function cartReducer(state: CartItem[], action: Action): CartItem[] {
  switch (action.type) {
    case "ADD_ITEM":
      return [...state, action.payload];

    case "UPDATE_ITEM":
      return state.map((item) =>
        item.id === action.payload.id
          ? { ...item, quantity: action.payload.quantity }
          : item
      );

    case "REMOVE_ITEM":
      return state.filter((item) => item.id !== action.payload);

    default:
      return state;
  }
}

export default function CartApp() {
  const [cart, dispatch] = useReducer(cartReducer, []);
  const [name, setName] = useState("");
  const [quantity, setQuantity] = useState(1);

  const handleAdd = () => {
    if (!name.trim()) return;
    const newItem: CartItem = {
      id: Date.now(),
      name,
      quantity,
    };
    dispatch({ type: "ADD_ITEM", payload: newItem });
    setName("");
    setQuantity(1);
  };

  const handleUpdate = (id: number, quantity: number) => {
    dispatch({ type: "UPDATE_ITEM", payload: { id, quantity } });
  };

  const handleRemove = (id: number) => {
    dispatch({ type: "REMOVE_ITEM", payload: id });
  };

  return (
    <div style={{ padding: "20px" }}>
      <h2>ðŸ›’ Shopping Cart</h2>

      <input
        type="text"
        placeholder="Item name"
        value={name}
        onChange={(e) => setName(e.target.value)}
      />
      <input
        type="number"
        min="1"
        value={quantity}
        onChange={(e) => setQuantity(Number(e.target.value))}
      />
      <button onClick={handleAdd}>Add Item</button>

        {cart.map((item) => (
          <li key={item.id}>
            {item.name} â€” Qty: {item.quantity}
            <input
              type="number"
              min="1"
              value={item.quantity}
              onChange={(e) => handleUpdate(item.id, Number(e.target.value))}
            />
            <button onClick={() => handleRemove(item.id)}>Remove</button>
          </li>
        ))}
    </div>
  );
}
